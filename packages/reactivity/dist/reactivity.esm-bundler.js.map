{"version":3,"file":"reactivity.esm-bundler.js","sources":["../../shared/src/index.ts","../src/effect.ts","../src/baseHandlers.ts","../src/reactive.ts","../src/ref.ts","../src/computed.ts"],"sourcesContent":["export const isObject = (value) => typeof value == 'object' && value !== null //判断是否是对象\r\n\r\nexport const extend = Object.assign //对象合并\r\n\r\nexport const isArray = Array.isArray\r\nexport const isFunction = (value) => typeof value == 'function'\r\nexport const isNumber = (value) => typeof value == 'number'\r\nexport const isString = (value) => typeof value == 'string'\r\n\r\nexport const isIntegerKey = (key) => parseInt(key) + '' === key //判断是不是数字\r\n\r\nlet hasOwnProperty = Object.prototype.hasOwnProperty\r\nexport const hasOwn = (target, key) => hasOwnProperty.call(target, key) //判断key是不是target属性\r\n\r\nexport const hasChanged = (oldValue, value) => oldValue !== value\r\n","import { isArray, isIntegerKey } from '@vue/shared'\r\nimport { TriggerOrTypes } from './operators'\r\n\r\nexport function effect(fn, options: any = {}) {\r\n  //effect变成响应式的，数据变化重新执行\r\n\r\n  const effect = createReactiveEffect(fn, options)\r\n\r\n  if (!options.lazy) {\r\n    effect() //默认会自动执行一次\r\n  }\r\n  return effect //有点类似vue2的watcher\r\n}\r\n\r\nlet uid = 0 //每个effect都有一个id\r\nlet activeEffect //存储当前effect，像是vue2全局存储的watcher一样\r\nconst effectStack = [] //熟悉的watcher栈，先入后出，先执行最后一个\r\nfunction createReactiveEffect(fn, options) {\r\n  const effect = function reactiveEffect() {\r\n    if (!effectStack.includes(effect)) {\r\n      //先看看栈里有没有一样的，有过就不执行了(防止 变量++ 这样的情况等)\r\n      try {\r\n        effectStack.push(effect) //通过全局栈，拿到effect本身存入栈\r\n        activeEffect = effect //通过全局变量，拿到effect本身，在track就能用effect了\r\n        return fn()\r\n      } finally {\r\n        effectStack.pop() //执行完抛出栈\r\n        activeEffect = effectStack[effectStack.length - 1] //重新指向最外一个\r\n      }\r\n    }\r\n  }\r\n  effect.id = uid++ //effect的id\r\n  effect._isEffect = true //标识是响应式effect\r\n  effect.raw = fn //保留对应的原函数\r\n  effect.options = options //保存用户选项\r\n  return effect\r\n}\r\n\r\n//track类似vue2的dep\r\nconst targetMap = new WeakMap()\r\nexport function track(target, type, key) {\r\n  if (activeEffect === undefined) {\r\n    return\r\n  }\r\n  // 往当前weaWap查找有没有相同的键值对\r\n  let depsMap = targetMap.get(target)\r\n  if (!depsMap) {\r\n    //没有相同的，设立一个键，并且值是一个map\r\n    targetMap.set(target, (depsMap = new Map()))\r\n  }\r\n  let dep = depsMap.get(key)\r\n  if (!dep) {\r\n    //往刚刚从weakmap取出的map查找有没有相同的键值对\r\n    depsMap.set(key, (dep = new Set())) //没有相同的，设立一个键，并且值是一个set\r\n  }\r\n  //如果map里找到的set里没有当前effect，那就加入\r\n  if (!dep.has(activeEffect)) {\r\n    dep.add(activeEffect)\r\n  }\r\n}\r\n\r\nexport function trigger(target, type, key?, newValue?, oldValue?) {\r\n  //没收集过，直接返回\r\n  const depsMap = targetMap.get(target)\r\n  if (!depsMap) return\r\n\r\n  //把所有要执行的effect放到集合，最后一起执行\r\n  const effects = new Set()\r\n  const add = (effectToAdd) => {\r\n    if (effectToAdd) {\r\n      effectToAdd.forEach((effect) => effects.add(effect))\r\n    }\r\n  }\r\n  //对修改数组的length属性特殊处理\r\n  if (key === 'length' && isArray(target)) {\r\n    depsMap.forEach((dep, key) => {\r\n      debugger\r\n      console.log(depsMap, dep, key)\r\n      if (key === 'length' || key > newValue) {\r\n        //如果依赖收集过的值是‘length’或者[2]这样的，且修改的length小于了收集过的索引\r\n        add(dep) //加到集合\r\n      }\r\n    })\r\n  } else {\r\n    if (key !== undefined) {\r\n      //修改\r\n      add(depsMap.get(key))\r\n    }\r\n    switch (type) {\r\n      case TriggerOrTypes.ADD:\r\n        if (Array.isArray(target) && isIntegerKey(key)) {\r\n          //如果是通过下标索引添加，注意只能是添加，那就通过length触发\r\n          add(depsMap.get('length'))\r\n        }\r\n    }\r\n  }\r\n  effects.forEach((effect: any) => {\r\n    if (effect.options.scheduler) {\r\n      effect.options.scheduler()\r\n    } else {\r\n      effect()\r\n    }\r\n  })\r\n}\r\n","//实现new Proxy(target,baseHandler)的各handler\r\n\r\nimport { extend, hasChanged, hasOwn, isArray, isIntegerKey, isObject } from '@vue/shared'\r\nimport { reactive, readonly } from './reactive'\r\nimport { track, trigger } from './effect'\r\nimport { TrackOrTypes, TriggerOrTypes } from './operators'\r\n\r\n/*\r\n后续Object的方法会迁移到Reflect.getProptypeof()\r\nReflect的操作会有返回值，会报异常\r\n新es6语法\r\n\r\ntarget：原对象\r\nkey：属性\r\nreceiver：代理对象本身\r\n*/\r\n\r\nfunction createGetter(isReadonly = false, isShallow = false) {\r\n  //根据是不是只可读和是不是浅的造出不同的用于代理的get方法\r\n  return function get(target, key, receiver) {\r\n    const res = Reflect.get(target, key, receiver)\r\n\r\n    if (!isReadonly) {\r\n      //不是只读的，进行依赖收集\r\n\r\n      //传递三个参数，第二个表示操作的类型\r\n      track(target, TrackOrTypes.GET, key)\r\n    }\r\n    if (isShallow) {\r\n      //是浅的\r\n      return res\r\n    }\r\n    // ！！！！！！！vue3比vue2性能好就是vue3用懒代理，取到了再递归代理，没取到不理\r\n    if (isObject(res)) {\r\n      //如果是对象，还得进去循环一下\r\n      return isReadonly ? readonly(res) : reactive(res)\r\n    }\r\n\r\n    return res\r\n  }\r\n}\r\nfunction createSetter(isShallow = false) {\r\n  //根据是不是只可读和是不是浅的造出不同的用于代理的set方法\r\n  return function set(target, key, value, receiver) {\r\n    const oldValue = target[key] //获取老值\r\n\r\n    let hadKey=isArray(target) && isIntegerKey(key)\r\n      ? Number(key) < target.length\r\n      : hasOwn(target, key) //看看是不是数组，并且通过索引修改,如果是那就比比长度和下标，看看是新增还是修改，如果不是数组那就是对象，看看有没有这个属性。这段代码判断是不是更新\r\n\r\n    const result = Reflect.set(target, key, value, receiver)\r\n\r\n    if(!hadKey){//新增\r\n      trigger(target,TriggerOrTypes.ADD,key,value)\r\n    }else if(hasChanged(oldValue,value)){//修改\r\n      trigger(target,TriggerOrTypes.SET,key,value,oldValue)\r\n    }\r\n\r\n    return result\r\n  }\r\n}\r\n\r\nconst get = createGetter(false, false) //可读可写，深\r\nconst shallowGet = createGetter(false, true) //可读可写，浅\r\nconst readonlyGet = createGetter(true, false) //只可读，深\r\nconst shallowReadonlyGet = createGetter(true, true) //只可读，浅\r\n\r\nconst set = createSetter(false) //可读可写，深\r\nconst shallowSet = createSetter(true) //可读可写，浅\r\n\r\nexport const mutableHandlers = {\r\n  get,\r\n  set,\r\n}\r\nexport const shallowReactiveHandlers = {\r\n  get: shallowGet,\r\n  set: shallowSet,\r\n}\r\nlet readonlyObj = {\r\n  set: (target, key) => {\r\n    console.warn(`set on key ${key} failed`)\r\n  },\r\n}\r\n//set都是警告，直接合并对象\r\nexport const readOnlyHandlers = extend(\r\n  {\r\n    get: readonlyGet,\r\n  },\r\n  readonlyObj\r\n)\r\nexport const shallowReadonlyHandlers = extend(\r\n  {\r\n    get: shallowReadonlyGet,\r\n  },\r\n  readonlyObj\r\n)\r\n","import { isObject } from '@vue/shared'\r\n\r\nimport {\r\n  mutableHandlers,\r\n  shallowReactiveHandlers,\r\n  readOnlyHandlers,\r\n  shallowReadonlyHandlers,\r\n} from './baseHandlers'\r\n\r\nexport function reactive(target) {\r\n  //可读可写，深度响应式\r\n  return createReactiveObject(target, false, mutableHandlers)\r\n}\r\n\r\nexport function shallowReactive(target) {\r\n  //可读可写，浅度响应式\r\n  return createReactiveObject(target, false, shallowReactiveHandlers)\r\n}\r\n\r\nexport function readonly(target) {\r\n  //仅可读，深度响应式\r\n  return createReactiveObject(target, true, readOnlyHandlers)\r\n}\r\n\r\nexport function shallowReadonly(target) {\r\n  //仅可读，浅度响应式\r\n  return createReactiveObject(target, true, shallowReadonlyHandlers)\r\n}\r\n\r\n/*\r\n  如果一个对象只被WeakMap引用就会垃圾回收，不会造成内存泄，且键能是对象\r\n*/\r\nconst reactiveMap = new WeakMap() //存放可读写的的数据\r\nconst readonlyMap = new WeakMap() //存放只可读的数据\r\n// 函数柯里化，不同要求，不同参数，不同处理\r\nexport function createReactiveObject(target, isReadonly, baseHandlers) {\r\n  //reactive只能拦截对象\r\n  if (!isObject(target)) {\r\n    return target\r\n  }\r\n\r\n  //根据参数判断需要用到哪个Map\r\n  const proxyMap = isReadonly ? readonlyMap : reactiveMap\r\n\r\n  //判断一下当前需要代理的数据有没有被代理过\r\n  const exisitProxy = proxyMap.get(target)\r\n\r\n  //代理过直接返回\r\n  if (exisitProxy) {\r\n    return exisitProxy\r\n  }\r\n\r\n  //响应式代理核心 如果被代理过就不要再代理\r\n  const proxy = new Proxy(target, baseHandlers)\r\n  //放入对应Map\r\n  proxyMap.set(target, proxy)\r\n\r\n  return proxy\r\n}\r\n","import { hasChanged, isArray, isObject } from '@vue/shared'\r\nimport { track, trigger } from './effect'\r\nimport { TrackOrTypes, TriggerOrTypes } from './operators'\r\nimport { reactive } from './reactive'\r\n\r\nexport function ref(value) {\r\n  //深包装\r\n  return createRef(value, false)\r\n}\r\n\r\n//ref和reactive的区别，ref用defineProperty，reactive用proxy，ref的本质就是包装成对象\r\n\r\nexport function shallowRef(value) {\r\n  //浅包装\r\n  return createRef(value, true)\r\n}\r\n\r\nfunction createRef(rawValue, isShallow = false) {\r\n  //值和是否是浅的\r\n  return new RefImpl(rawValue, isShallow) //返回一个RefImpl包装的对象\r\n}\r\n\r\nconst convert = (val) => (isObject(val) ? reactive(val) : val)\r\nclass RefImpl {\r\n  public _value //ts声明一个属性\r\n  public __v_isRef = true\r\n  constructor(public rawValue, public isShallow) {\r\n    //public标识属性放大到了实例上\r\n\r\n    this._value = isShallow ? rawValue : convert(rawValue) //把值放到_value上，方便get，set统一操作\r\n  }\r\n\r\n  // get和set本质上就是defineProperty\r\n  //value其实就相当于对象的key\r\n  get value() {\r\n    track(this, TrackOrTypes.GET, 'value') //依赖收集\r\n    return this._value\r\n  }\r\n  set value(newValue) {\r\n    if (hasChanged(newValue, this.rawValue)) {\r\n      //判断新老值是否变化\r\n      this.rawValue = newValue\r\n      this._value = this.isShallow ? this.rawValue : convert(this.rawValue)\r\n      trigger(this, TriggerOrTypes.SET, 'value', newValue) //更新依赖内容\r\n    }\r\n  }\r\n}\r\n\r\nclass ObjectRefImpl {\r\n  public __v_isRef = true\r\n  constructor(public target, public key) {}\r\n  get value() {\r\n    return this.target[this.key]\r\n  }\r\n  set value(newValue) {\r\n    this.target[this.key] = newValue\r\n  }\r\n}\r\n//把对象的key转换成ref类型\r\nexport function toRef(target, key) {\r\n  return new ObjectRefImpl(target, key)\r\n}\r\n\r\n// 一次性把多个key转换成ref\r\nexport function toRefs(object) {\r\n  const ret = isArray(object) ? new Array(object.length) : {}\r\n  for (let key in object) {\r\n    ret[key] = toRef(object, key)\r\n  }\r\n  return ret\r\n}\r\n","import { isFunction } from '@vue/shared'\r\nimport { effect, track, trigger } from './effect'\r\nimport { TrackOrTypes, TriggerOrTypes } from './operators'\r\n\r\n//计算属性其实相当于是一个effect，getter的内容更新了，effect就要在调用的时候重新执行\r\n\r\n// effect(()=>{\r\n//   console.log(myage)\r\n// })\r\n\r\n// 二者极度地相似，只不过myAge不需要立即执行，且只有再次取值才重新更新计算属性的值\r\n\r\n// myAge=computed((){\r\n//   return myage  \r\n// })\r\n\r\nclass ComputedRefImpl {\r\n  public _dirty = true //默认取值不要用缓存\r\n  public _value\r\n  public _effect\r\n  constructor(getter, public setter) {\r\n    this._effect = effect(\r\n      //计算属性创建一个effect，effect返回值就是getter\r\n      getter,\r\n      {\r\n        lazy: true, //不要默认执行effect\r\n        scheduler: () => {\r\n          if (!this._dirty) {\r\n            this._dirty = true//计算属性的值需要修改，在get的时候重新通过effect的返回值获取新值\r\n            trigger(this,TriggerOrTypes.SET,'value')//执行计算属性本身依赖的更新\r\n          }\r\n        },\r\n      }\r\n    )\r\n  }\r\n\r\n  get value() {\r\n    if (this._dirty) {\r\n      this._value = this._effect() //取值执行effect,进行依赖收集，effect执行getter以后返回的值就是计算属性的结果\r\n      this._dirty = false//取到一次值以后，以后计算属性取值直接给，不需要再走effect\r\n    }\r\n    track(this,TrackOrTypes.GET,'value')//计算属性本身被effect也要依赖收集\r\n\r\n    // effect(()=>{\r\n      // console.log(计算属性)\r\n    // })\r\n\r\n    return this._value\r\n  }\r\n\r\n  set value(newValue) {\r\n    this.setter(newValue)\r\n  }\r\n}\r\n\r\nexport function computed(getterOrOptions) {\r\n  // 用户传递的getterOrOptions里可以是一个有返回值作为conputed的结果的函数,或者取值修改方法getter和setter\r\n  let getter\r\n  let setter\r\n  if (isFunction(getterOrOptions)) {\r\n    getter = getterOrOptions\r\n    setter = () => {}\r\n  } else {\r\n    getter = getterOrOptions.get\r\n    setter = getterOrOptions.set\r\n  }\r\n\r\n  return new ComputedRefImpl(getter, setter) //包装成ref模样\r\n}\r\n"],"names":[],"mappings":"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"}